13/01/2022
-wasted memory, each pokemon will have space for two types
-one type pokemon will have two types, as type 2 will default to NORMAL

17/01/2022
- I'm accepting the wasted memory, instead changed the enum type to have a NONE value, which
defaults to 1 for both attack and defence.
-abolished the overloaded constructor; now we have to put NONE for one types' second value

16/03/2022
-move default moves from pokemon and make it its own map; battle pokemon will house the
moves and have the default moves loaded in.
-same with all moves, needs to be moved to another map (giving us 3 maps to make a whole)

24/03/2022
-Having difficulty getting the values from the map when doing the speed comparator.
Need to stop and refersh knowledge of pointers. Test unit is also borked, seems I've
set it up wrong. the battle pokemon pointers don't have all the stats (but they do point
to the same memory addess).
-Turns out, the references to the pokemon in the map are being lost as soon as we exit
the stack frame of the method. Don't know why. Works if we use objects instead.