13/01/2022
-wasted memory, each pokemon will have space for two types
-one type pokemon will have two types, as type 2 will default to NORMAL

17/01/2022
- I'm accepting the wasted memory, instead changed the enum type to have a NONE value, which
defaults to 1 for both attack and defence.
-abolished the overloaded constructor; now we have to put NONE for one types' second value

16/03/2022
-move default moves from pokemon and make it its own map; battle pokemon will house the
moves and have the default moves loaded in.
-same with all moves, needs to be moved to another map (giving us 3 maps to make a whole)

24/03/2022
-Having difficulty getting the values from the map when doing the speed comparator.
Need to stop and refersh knowledge of pointers. Test unit is also borked, seems I've
set it up wrong. the battle pokemon pointers don't have all the stats (but they do point
to the same memory addess).
-Turns out, the references to the pokemon in the map are being lost as soon as we exit
the stack frame of the method. Don't know why. Works if we use objects instead.

25/03/2022
-Found the source of the problem, it was the battle pokemon constructor, which initialised
the pokemon_ptr variable with the Gen1_Pokemon& passed in. Now it works by intitialising
it with the Pokemon object from the map instead.

06/04/2022
-Map of moves doesn't work, it's an unsafe conversion. Can't get move out properly.

26/04/2022
-Redoing the idea of typematchups with a 3d array, but need to figure out how to do it.
Thinking use generics and define each Type_Enum as int&, but can't figure out how to
separate into header and cpp

26/04/2022
-still don't know why my arrays don't work in header and cpp MUST LOOK
-256x3 is too big for a linear search. will use maps

27/04/2022
-hashmaps of pointers seems fucked. hashmaps of hashmaps for doing the type thing is far
too complicated to read and doesn't work. must try something else.

28/04/2022 
-turns out I didn't know maps. doing the same without const.
-my tests don't work now. having to add them manually again
-the type_enum ain't working in Main, have no value

29/04/2022
-Move has a load of global stuff I didn't see before. need to put it into structs
might be the breaking of the tests?

02/05/2022
-moved the enums into a namespace and did all the subsequent correxions. made all cpp's
have using namespace status_and_stats. still won't return a value in main.

03/05/2022
-finally got the no output error fixed- it was because the maps of type matchup
were in the wrong order in the cpp file, so the master map was putting in an
uninitialised pointer.
-workaround for the tests is to include both h and cpp